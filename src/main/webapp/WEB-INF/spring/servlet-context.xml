<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jee="http://www.springframework.org/schema/jee"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/context
            http://www.springframework.org/schema/context/spring-context-4.3.xsd
            http://www.springframework.org/schema/mvc
            http://www.springframework.org/schema/mvc/spring-mvc.xsd
            http://www.springframework.org/schema/tx
            http://www.springframework.org/schema/tx/spring-tx.xsd
            http://www.springframework.org/schema/jee
            http://www.springframework.org/schema/jee/spring-jee-3.0.xsd">

    <!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->

    <mvc:default-servlet-handler />

    <!-- Enables the Spring MVC @Controller programming model -->
    <mvc:annotation-driven />

    <!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
    <mvc:resources mapping="/css/**" location="/resources/css" />
    <mvc:resources mapping="/js/**" location="/resources/js" />

    <context:annotation-config />
    <context:component-scan base-package="com.tgs.warehouse" />

    <!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/jsp/" />
        <property name="suffix" value=".jsp" />
    </bean>

    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="org.postgresql.Driver" />
        <property name="url" value="jdbc:postgresql://localhost:5432/warehouse" />
        <property name="username" value="postgres" />
        <property name="password" value="admin" />
    </bean>

    <bean id="sessionFactory"
          class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation" value="classpath:hibernate.cfg.xml" />
        <!--<property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQL82Dialect</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.format_sql">true</prop>
            </props>
        </property> -->
    </bean>

    <!--aop:aspectj-autoproxy proxy-target-class="true"/-->

    <tx:annotation-driven transaction-manager="transactionManager"/>

    <bean id="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>

    <!--<bean id="logisticUnitDao" class="com.tgs.warehouse.dao.LogisticUnitDAO">-->
        <!--<constructor-arg>-->
            <!--<ref bean="sessionFactory" />-->
        <!--</constructor-arg>-->
    <!--</bean>-->

    <!--<bean id="userDao" class="com.tgs.warehouse.dao.UserDAO">-->
        <!--<constructor-arg>-->
            <!--<ref bean="sessionFactory" />-->
        <!--</constructor-arg>-->
    <!--</bean>-->

    <!--<bean id="userService" class="com.tgs.warehouse.services.UserService"></bean>-->

    <!--jee:jndi-lookup jndi-name="jdbc/DatasourcesDB" id="dataSource"
                     expected-type="javax.sql.DataSource">
    </jee:jndi-lookup-->

</beans>